syntax on
set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()

Plugin 'gmarik/Vundle.vim'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'vim-scripts/taglist.vim'
Plugin 'mattn/emmet-vim'
Plugin 'tpope/vim-commentary'
Plugin 'pangloss/vim-javascript'
Plugin 'skammer/vim-css-color'
Plugin 'Valloric/YouCompleteMe'
Plugin 'plasticboy/vim-markdown'
Plugin 'altercation/vim-colors-solarized'
Plugin 'vim-scripts/DoxygenToolkit.vim'
Plugin 'vim-scripts/Rainbow-Parenthesis.git'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'junegunn/vim-easy-align'
Plugin 'othree/html5.vim'
Plugin 'xhr/vim-io'
Plugin 'adimit/prolog.vim'
Plugin 'Raimondi/delimitMate'
Plugin 'tpope/vim-rails'
Plugin 'slim-template/vim-slim'
Plugin 'kien/ctrlp.vim'
Plugin 'chilicuil/vim-sml-coursera'
Plugin 'mattn/webapi-vim'
Plugin 'mattn/gist-vim'
Plugin 'mxw/vim-jsx'
Plugin 'scrooloose/syntastic'
Plugin 'jiangmiao/auto-pairs'
Plugin 'Lokaltog/vim-powerline'


set softtabstop=4
set shiftwidth=4
set autoindent
set rnu
set mousehide
set encoding=utf-8
set ts=4
set expandtab
set foldmethod=indent
set cindent
set wrap
set pastetoggle=<F2>
set laststatus=2

call vundle#end()
filetype plugin indent on

" nerdtree configure
" auto open a nerdtree when vim starts up
" autocmd vimenter * NERDTree
autocmd StdinReadPre * let s:std_in=1
"autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
let g:NERDTreeDirArrows = 1
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'


if has("autocmd")
    autocmd FileType javascript setlocal ts=2 sw=2 expandtab
    autocmd FileType html setlocal ts=2 sw=2 expandtab
    autocmd FileType css setlocal ts=2 sw=2 expandtab
    autocmd FileType ruby setlocal ts=2 sw=2 expandtab
    autocmd FileType r setlocal ts=2 sw=2 expandtab
end

"set cuc
"set cul
hi CursorLine cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white
hi CursorColumn cterm=NONE ctermbg=darkred ctermfg=white guibg=darkred guifg=white

"快速编译C程序
map<F5> :call Compile()<CR>
func! Compile()
    if &filetype == 'c'
        exec "w"
        exec "! clear;
        \echo 正在编译: ./% ...;
        \echo ;
        \gcc % -g -o %<.o;
        \echo ;
        \echo 编译完成;"
    endif
endfunc

"按Ctrl－F5 调试当前文件
map <C-F5> :call Debug()<CR>

func! Debug()
    if &filetype == 'c'
        exec "w"
        exec "! clear;
        \ echo 正在编译: ./% ...;
        \ echo ;
        \ gcc % -g -o %<.o;
        \ echo ;
        \ echo 编译完成,开始调试;
        \ gdb %<.o;"
    endif
endfunc

"按F6 执行
map <F6> :call Run()<CR>
func! Run()
if &filetype == 'c'
exec "! clear;
\ ./%<.o;"
endif
endfunc

"插入指定文件
map <F7> :call InsertFile()<CR>
func! InsertFile()
exec "r your_file_path;"
endfunc
let mapleader=","

let g:use_zen_expandabbr_key = '<c-y>'

colorscheme desert

" 第80列高亮
set cc=81

" DoxygenToolkit config
let g:DoxygenToolkit_briefTag_pre="@synopsis  "
let g:DoxygenToolkit_paramTag_pre="@param "
let g:DoxygenToolkit_returnTag="@returns   "
let g:DoxygenToolkit_authorName="brittyu"

set ignorecase smartcase
nmap <F8> :TagbarToggle<CR>
let g:jsx_ext_required = 0
